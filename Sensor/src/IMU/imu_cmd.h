

#ifndef __IMU_CMD_H__
#define __IMU_CMD_H__

#include <cstdint>

enum class IMU_CMD_t : uint8_t
{
    NOCMD = 0,
    CMD_MIN = NOCMD, 
    SELECT_MAGNETOMETER,
    SELECT_GYROSCOPE,
    SELECT_ACCELEROMETER,
    SELECT_AHRS,
    SENSOR_CALIBRATE_NORMALIZED,
    SENSOR_CALIBRATE_ZERO_OFFSET,
    SENSOR_CALIBRATE_MAGNETOMETER,
    SENSOR_CALIBRATE_GYROSCOPE,
    SENSOR_CALIBRATE_RESET,
    SENSOR_CALIBRATE_SAVE,
    AHRS_INPUT_TOGGLE,
    AHRS_YAW_TOGGLE,
    AHRS_PITCH_TOGGLE,
    AHRS_ROLL_TOGGLE,
    SENSOR_DATA_HOLD_TOGGLE,
    SENSOR_DATA_IDEAL_TOGGLE,
    SENSOR_DATA_FIXED_TOGGLE,
    SENSOR_DATA_DISPLAY_TOGGLE,
    AHRS_PROP_GAIN_UP,
    AHRS_PROP_GAIN_DOWN,
    AHRS_INTEG_GAIN_UP,
    AHRS_INTEG_GAIN_DOWN,
    AHRS_SAMPLE_FREQ_UP,
    AHRS_SAMPLE_FREQ_DOWN,
    GYROSCOPE_CORRECTION_UP,
    GYROSCOPE_CORRECTION_DOWN,
    MAGNETOMETER_STABILITY_TOGGLE,
    AHRS_BETA_GAIN_UP,
    AHRS_BETA_GAIN_DOWN,
    AHRS_ALGORITHM_TOGGLE,
    GYROSCOPE_ENABLE_TOGGLE,
    UNCALIBRATED_DISPLAY_TOGGLE,
    SETTINGS_DISPLAY_TOGGLE,
    SELECT_ODR,
    NOISE_THRESHOLD_UP,
    NOISE_THRESHOLD_DOWN,
    CMD_MAX = NOISE_THRESHOLD_DOWN 
};

typedef enum
{
    IMU_AHRS = 0,
    IMU_SENSOR_MIN = IMU_AHRS,
    IMU_ACCELEROMETER,
    IMU_GYROSCOPE,
    IMU_MAGNETOMETER,
    IMU_ODR,
    IMU_SENSOR_MAX = IMU_ODR
} IMU_SENSOR_t;

#endif


